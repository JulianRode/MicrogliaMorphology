// Color-by-cluster morphology script
// Jenn Kim
// April 2023
 
function findRoiWithName(roiName) { 
	nR = roiManager("Count"); 
 
	for (i=0; i<nR; i++) { 
		roiManager("Select", i); 
		rName = Roi.getName(); 
		if (matches(rName, roiName)) { 
			return i; 
		} 
	} 
	//return -1; 
} 

// MACRO STARTS HERE

//Welcome message
		Dialog.create("MicrogliaMorphology");
		Dialog.addMessage("Welcome to MicrogliaMorphology's ColorByCluster feature!");
		Dialog.addMessage("The complimentary ColorByCluster features within MicrogliaMorphology and MicrogliaMorphologyR allow you to color your microglia cells by their morphological cluster IDs.");
		Dialog.addMessage("This allows for visual verification of hypothesized cluster characterizations.");
		Dialog.addMessage("Please make sure to use the complimentary MicrogliaMorphologyR package to generate your ColorByCluster.csv file prior to this step.");
		Dialog.addMessage("If you have not done this yet, please do so first and come back to MicrogliaMorphology's ColorByCluster feature. If you are ready, continue on:");
		Dialog.show();
		
//use file browser to choose path and files to run plugin on
		ColorByCluster_originalimage = File.openDialog("Select the original .tiff image that you used as input for MicrogliaMorphology.");
		ColorByCluster_thresholdedimage = File.openDialog("Select the thresholded .tiff image that was generated by MicrogliaMorphology from your original input image.");
		ColorByCluster_clusters = File.openDialog("Select the .csv file generated from MicrogliaMorphologyR which contains the cluster labels for the final microglia cells.");
		
		open(ColorByCluster_thresholdedimage);
		print(ColorByCluster_thresholdedimage);
		run("ROI Manager...");
		roiManager("Show All");
		roiManager("Show None");
		run("Analyze Particles...", "pixel add");
		close();
		
		open(ColorByCluster_originalimage);
		print(ColorByCluster_originalimage);
		
		open(ColorByCluster_clusters);
		print(ColorByCluster_clusters);
		selectWindow("ColorByCluster.csv");
		
		x = File.openAsString(ColorByCluster_clusters);
		rows = split(x,"\n");	
		
		roiManager("Show All without labels");
		roiManager("Set Color", "black");

// customize colors for up to 10 cluster labels
		//dialog box
		Dialog.create("MicrogliaMorphology");
		Dialog.addMessage("In the sections below, specify what colors you want your morphological clusters to be in the image.");
		Dialog.addMessage("You can format your color choices as HEX code (e.g., BBCC33)");
		Dialog.addMessage("or any of the following colors: black, white, cyan, magenta, yellow, red, green, blue, and orange");
		Dialog.addString("Cluster 1:", "BBCC33");
		Dialog.addString("Cluster 2:", "44BB99");
		Dialog.addString("Cluster 3:", "EEDD88");
		Dialog.addString("Cluster 4:", "EE8866");
		Dialog.addString("Cluster 5:", "red");
		Dialog.addString("Cluster 6:", "green");
		Dialog.addString("Cluster 7:", "blue");
		Dialog.addString("Cluster 8:", "yellow");
		Dialog.addString("Cluster 9:", "orange");
		Dialog.addString("Cluster 10:", "cyan");
		Dialog.show();	
		
		Cluster1 = Dialog.getString();
		Cluster2 = Dialog.getString();
		Cluster3 = Dialog.getString();
		Cluster4 = Dialog.getString();
		Cluster5 = Dialog.getString();
		Cluster6 = Dialog.getString();
		Cluster7 = Dialog.getString();
		Cluster8 = Dialog.getString();
		Cluster9 = Dialog.getString();
		Cluster10 = Dialog.getString();


// ColorByCluster
for(n=0; n<rows.length-1; n++) {
	cluster = Table.getString("Cluster",n);

		if(cluster==1){
			selectWindow("ColorByCluster.csv");
			label2 = Table.getString("ID",n);
			//print(label2);
			roi_idx = findRoiWithName(label2);
			//print(roi_idx);
			roiManager("Select", roi_idx);
			Roi.setFillColor(Cluster1);
	}
	
		if(cluster==2){
			selectWindow("ColorByCluster.csv");
			label2 = Table.getString("ID",n);
			//print(label2);
			roi_idx = findRoiWithName(label2);
			//print(roi_idx);
			roiManager("Select", roi_idx);
			Roi.setFillColor(Cluster2);
	}
	
		if(cluster==3){
			selectWindow("ColorByCluster.csv");
			label2 = Table.getString("ID",n);
			//print(label2);
			roi_idx = findRoiWithName(label2);
			//print(roi_idx);
			roiManager("Select", roi_idx);
			Roi.setFillColor(Cluster3);
	}
	
		if(cluster==4){
			selectWindow("ColorByCluster.csv");
			label2 = Table.getString("ID",n);
			//print(label2);
			roi_idx = findRoiWithName(label2);
			//print(roi_idx);
			roiManager("Select", roi_idx);
			Roi.setFillColor(Cluster4);
	}
	
		if(cluster==5){
			selectWindow("ColorByCluster.csv");
			label2 = Table.getString("ID",n);
			print(label2);
			roi_idx = findRoiWithName(label2);
			print(roi_idx);
			roiManager("Select", roi_idx);
			Roi.setFillColor(Cluster5);
	}
	
		if(cluster==6){
			selectWindow("ColorByCluster.csv");
			label2 = Table.getString("ID",n);
			//print(label2);
			roi_idx = findRoiWithName(label2);
			//print(roi_idx);
			roiManager("Select", roi_idx);
			Roi.setFillColor(Cluster6);
	}
	
		if(cluster==7){
			selectWindow("ColorByCluster.csv");
			label2 = Table.getString("ID",n);
			//print(label2);
			roi_idx = findRoiWithName(label2);
			//print(roi_idx);
			roiManager("Select", roi_idx);
			Roi.setFillColor(Cluster7);
	}
	
		if(cluster==8){
			selectWindow("ColorByCluster.csv");
			label2 = Table.getString("ID",n);
			//print(label2);
			roi_idx = findRoiWithName(label2);
			//print(roi_idx);
			roiManager("Select", roi_idx);
			Roi.setFillColor(Cluster8);
	}
	
		if(cluster==9){
			selectWindow("ColorByCluster.csv");
			label2 = Table.getString("ID",n);
			//print(label2);
			roi_idx = findRoiWithName(label2);
			//print(roi_idx);
			roiManager("Select", roi_idx);
			Roi.setFillColor(Cluster9);
	}
	
		if(cluster==10){
			selectWindow("ColorByCluster.csv");
			label2 = Table.getString("ID",n);
			print(label2);
			roi_idx = findRoiWithName(label2);
			print(roi_idx);
			roiManager("Select", roi_idx);
			Roi.setFillColor(Cluster10);
	}

}

run("Flatten");
print("done!");
